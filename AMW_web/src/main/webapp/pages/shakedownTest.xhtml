<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:a4j="http://richfaces.org/a4j"
      xmlns:rich="http://richfaces.org/rich"
>

<ui:composition template="templates/template.xhtml">
    <f:metadata>
        <f:event type="preRenderView"
                 listener="#{shakedownTestScreenDataProvider.initView}"></f:event>
    </f:metadata>
    <ui:param name="screen" value="shakedownTest"/>
    <ui:define name="title">Shakedown Test</ui:define>
    <ui:define name="pagetitle">
        <h:outputText id="pageheader" value="Shakedown test"/>
    </ui:define>

    <ui:define name="body">
        <h:panelGroup layout="block" id="navig">
            <aside>
                <nav>
                    <ul>
                        <ui:repeat var="shakedownPresetViews"
                                   value="${shakedownTestScreenDataProvider.shakedownTestPresetViewsOptions}">
                            <li
                                    class="${shakedownPresetViews == shakedownTestScreenDataProvider.selectedShakedownTestPresetView ? 'current' : ''}">
                                <a4j:commandLink value="#{shakedownPresetViews}"
                                                 actionListener="#{shakedownTestScreenDataProvider.shakedownTestPresetViewChangeListener(shakedownPresetViews)}"
                                                 execute="@this" render="navig, contentPanelGroup, pollform"/>
                            </li>
                        </ui:repeat>
                    </ul>

                </nav>
            </aside>
        </h:panelGroup>

        <section id="content">
            <div class="container">

                <h:panelGroup id="contentPanelGroup">

                    <article>

                        <div class="well withHeight autoOverflow">

                            <ui:include src="components/customFilterComp.xhtml">
                                <ui:param name="customFilterImpl"
                                          value="#{shakedownTestScreenDataProvider.customFilterComp}"/>
                            </ui:include>


                            <h:panelGroup id="shakedowntest">
                                <h:dataTable var="sdtest"
                                             value="#{shakedownTestScreenDataProvider.shakedownTests}"
                                             styleClass="well" rowClasses="odd-row,even-row">

                                    <f:facet name="caption">
                                        <nav class="actionbar">
                                            <ul>
                                                <li><h:commandLink type="submit" styleClass="btn light"
                                                                   onclick="showLoader();"
                                                                   actionListener="#{shakedownTestScreenDataProvider.reloadShakedownTests(true)}">
                                                    <i class="icon icon-reload"></i>
                                                    <h:outputText value="Apply filter / Refresh"/>
                                                </h:commandLink></li>

                                                <li><a4j:commandLink styleClass="btn light"
                                                                     rendered="#{securityDataProvider.hasPermission('ADD_SHAKEDOWN_TEST') and shakedownTestScreenDataProvider.shakedownTestViewSelected}"
                                                                     render="createTestPopupPanelGroup"
                                                                     onclick="showLoader();"
                                                                     action="${shakedownTestScreenDataProvider.initCreateTestPopupPanel()}"
                                                                     oncomplete="hideLoader(); #{rich:component('createTestPopupPanel')}.show();">
                                                    <i class="icon icon-add"></i>
                                                    <h:outputText value="Add shakedown test"/>
                                                </a4j:commandLink></li>
                                            </ul>
                                        </nav>
                                        <h2>
                                            <h:outputText value="Shakedown tests"/>
                                        </h2>
                                    </f:facet>

                                    <f:facet name="footer">
                                        <h:panelGroup>
                                            <a4j:commandLink value="&lt;&lt;" render="shakedowntest"
                                                             onclick="showLoader();" oncomplete="hideLoader();"
                                                             action="${shakedownTestScreenDataProvider.firstScreen()}"
                                                             rendered="${shakedownTestScreenDataProvider.currentPage!=0}"/>
                                            <a4j:commandLink value="&lt;" render="shakedowntest"
                                                             onclick="showLoader();" oncomplete="hideLoader();"
                                                             action="${shakedownTestScreenDataProvider.previousScreen()}"
                                                             rendered="${shakedownTestScreenDataProvider.currentPage!=0}"
                                                             styleClass="marginLeft10"/>
                                            <ui:repeat
                                                    value="${shakedownTestScreenDataProvider.availablePages().subList(
									 shakedownTestScreenDataProvider.currentPage-2 > 0 ? shakedownTestScreenDataProvider.currentPage-2 : 0,
									 shakedownTestScreenDataProvider.availablePages().size() >= shakedownTestScreenDataProvider.currentPage+3 ? shakedownTestScreenDataProvider.currentPage + 3 : shakedownTestScreenDataProvider.availablePages().size())
									 }"
                                                    var="page">
                                                <a4j:commandLink
                                                        rendered="${page!=shakedownTestScreenDataProvider.currentPage}"
                                                        value="${page+1}" styleClass="marginLeft10"
                                                        onclick="showLoader();" oncomplete="hideLoader();"
                                                        render="shakedowntest"
                                                        action="${shakedownTestScreenDataProvider.goToScreen(page)}"/>
                                                <h:outputText
                                                        rendered="${page==shakedownTestScreenDataProvider.currentPage}"
                                                        styleClass="marginLeft10 boldFont" value="${page+1}"/>
                                            </ui:repeat>

                                            <a4j:commandLink value="&gt;" styleClass="marginLeft10"
                                                             action="${shakedownTestScreenDataProvider.nextScreen()}"
                                                             onclick="showLoader();" oncomplete="hideLoader();"
                                                             render="shakedowntest"
                                                             rendered="${!shakedownTestScreenDataProvider.lastPage}"/>
                                            <a4j:commandLink value="&gt;&gt;" styleClass="marginLeft10"
                                                             onclick="showLoader();" oncomplete="hideLoader();"
                                                             action="${shakedownTestScreenDataProvider.lastScreen()}"
                                                             render="shakedowntest"
                                                             rendered="${!shakedownTestScreenDataProvider.lastPage}"/>
                                            <div class="control-group right">
                                                <label class="control-label">Results per page:</label>
                                                <div class="controls">
                                                    <h:selectOneMenu
                                                            value="#{shakedownTestScreenDataProvider.itemsPerPage}">
                                                        <f:selectItem itemLabel="10" itemValue="10"/>
                                                        <f:selectItem itemLabel="20" itemValue="20"/>
                                                        <f:selectItem itemLabel="50" itemValue="50"/>
                                                        <f:selectItem itemLabel="100" itemValue="100"/>
                                                        <a4j:ajax render="shakedowntest"/>
                                                    </h:selectOneMenu>
                                                </div>
                                            </div>

                                        </h:panelGroup>

                                    </f:facet>

                                    <h:column index="index" headerClass="width_200 nowrap">
                                        <f:facet name="header">
                                            <h:panelGroup styleClass="nowrap">
                                                <h:outputText value="State"/>
                                                <a4j:commandLink render="shakedowntest"
                                                                 onclick="showLoader();" oncomplete="hideLoader();"
                                                                 action="#{shakedownTestScreenDataProvider.changeSortOrderForSelectedColumn('STATE')}">
                                                    <i
                                                            class="${shakedownTestScreenDataProvider.getSortingIconForCol('STATE')} inlineBlockMiddle"></i>
                                                </a4j:commandLink>
                                            </h:panelGroup>
                                        </f:facet>
                                        <div>
                                            <h:outputText
                                                    value="#{shakedownTestScreenDataProvider.getShakedownTestStateText(sdtest)}"
                                                    styleClass="#{shakedownTestScreenDataProvider.getShakedownTestStateFrameCssClass(sdtest)} inlineBlock"/>
                                            <a4j:commandLink
                                                    oncomplete="#{rich:component('shakedownTestDetailPopup')}.show(); return false;"
                                                    render="shakedownTestDetailPopupFacet, shakedownTestDetailPopupPanelGroup"
                                                    title="Show details about this shakedown test"
                                                    styleClass="simpleInfo">
                                                <i
                                                        class="icon icon-info inlineBlock heght16 marginLeft10 valignMiddle"></i>
                                                <a4j:param
                                                        assignTo="#{shakedownTestScreenDataProvider.selectedShakedownTestId}"
                                                        value="${sdtest.id}"></a4j:param>
                                            </a4j:commandLink>
                                        </div>
                                    </h:column>

                                    <h:column index="index">
                                        <f:facet name="header">
                                            <h:panelGroup styleClass="nowrap">
                                                <h:outputText value="App Server"/>
                                                <a4j:commandLink render="shakedowntest"
                                                                 onclick="showLoader();" oncomplete="hideLoader();"
                                                                 action="#{shakedownTestScreenDataProvider.changeSortOrderForSelectedColumn('APPSERVER_NAME')}">
                                                    <i
                                                            class="${shakedownTestScreenDataProvider.getSortingIconForCol('APPSERVER_NAME')} inlineBlockMiddle"></i>
                                                </a4j:commandLink>
                                            </h:panelGroup>
                                        </f:facet>

                                        <h:link value="#{sdtest.resourceGroup.name}"
                                                outcome="editResourceView"
                                                rendered="${securityDataProvider.hasPermission('EDIT_APP_SERVER')}"
                                                styleClass="boldFont">
                                            <f:param name="id" value="#{sdtest.applicationServer.id}"/>
                                            <f:param name="ctx"
                                                     value="#{contextDataProvider.globalContextId}"/>
                                        </h:link>
                                        <h:outputText style="font-weight: bold;"
                                                      rendered="${!securityDataProvider.hasPermission('EDIT_APP_SERVER')}"
                                                      value="#{sdtest.resourceGroup.name}"/>

                                        <ui:repeat var="appToShow"
                                                   value="${sdtest.applicationsFromApplicationServer}">
                                            <h:panelGroup styleClass="paddingLeft20" layout="block">
                                                <h:link value="${appToShow.applicationName}"
                                                        outcome="editResourceView"
                                                        rendered="${securityDataProvider.hasPermission('EDIT_APP')}">
                                                    <f:param name="id" value="${appToShow.applicationId}"/>
                                                    <f:param name="ctx"
                                                             value="#{contextDataProvider.globalContextId}"/>
                                                </h:link>
                                                <h:outputText
                                                        rendered="${!securityDataProvider.hasPermission('EDIT_APP')}"
                                                        value="${appToShow.applicationName}"/>
                                            </h:panelGroup>
                                        </ui:repeat>
                                    </h:column>

                                    <h:column index="index" headerClass="width_80">
                                        <f:facet name="header">
                                            <h:panelGroup styleClass="nowrap">
                                                <h:outputText value="Release"/>
                                                <a4j:commandLink render="shakedowntest"
                                                                 onclick="showLoader();" oncomplete="hideLoader();"
                                                                 action="#{shakedownTestScreenDataProvider.changeSortOrderForSelectedColumn('RELEASE')}">
                                                    <i
                                                            class="${shakedownTestScreenDataProvider.getSortingIconForCol('RELEASE')} inlineBlockMiddle"></i>
                                                </a4j:commandLink>
                                            </h:panelGroup>
                                        </f:facet>

                                        <h:outputText rendered="#{sdtest.release != null}"
                                                      value="#{sdtest.release.name}"/>
                                    </h:column>
                                    <h:column index="index" headerClass="width_20">
                                        <f:facet name="header">
                                            <h:panelGroup styleClass="nowrap">
                                                <h:outputText value="Env"/>
                                                <a4j:commandLink render="shakedowntest"
                                                                 onclick="showLoader();" oncomplete="hideLoader();"
                                                                 action="#{shakedownTestScreenDataProvider.changeSortOrderForSelectedColumn('ENV')}">
                                                    <i
                                                            class="${shakedownTestScreenDataProvider.getSortingIconForCol('ENV')} inlineBlockMiddle"></i>
                                                </a4j:commandLink>
                                            </h:panelGroup>
                                        </f:facet>

                                        <h:outputText value="#{sdtest.context.name}" styleClass="boldFont"/>
                                    </h:column>


                                    <h:column index="index" headerClass="width_160">
                                        <f:facet name="header">
                                            <h:panelGroup styleClass="nowrap">
                                                <h:outputText value="Test date"/>
                                                <a4j:commandLink render="shakedowntest"
                                                                 onclick="showLoader();" oncomplete="hideLoader();"
                                                                 action="#{shakedownTestScreenDataProvider.changeSortOrderForSelectedColumn('TESTDATE')}">
                                                    <i
                                                            class="${shakedownTestScreenDataProvider.getSortingIconForCol('TESTDATE')} inlineBlockMiddle"></i>
                                                </a4j:commandLink>
                                            </h:panelGroup>
                                        </f:facet>

                                        <h:outputText
                                                value="#{shakedownTestScreenDataProvider.formatDate(sdtest.testDate)}"/>
                                    </h:column>

                                </h:dataTable>
                            </h:panelGroup>


                        </div>
                    </article>

                </h:panelGroup>
            </div>
        </section>
    </ui:define>

    <!-- ADD SHAKEDOWNTEST ORDER POPUP -->
    <ui:define name="component_popups">
        <h:form>
            <rich:popupPanel id="shakedownTestDetailPopup" moveable="true"
                             autosized="true">
                <f:facet name="header">
                    <h2>
                        <h:outputText
                                value="Results for shakedown test #${shakedownTestScreenDataProvider.selectedShakedownTest.id} (${shakedownTestScreenDataProvider.selectedShakedownTest.applicationServer.name})"
                                id="shakedownTestDetailPopupFacet"/>
                    </h2>
                </f:facet>
                <f:facet name="controls">
                    <h:outputLink value="#"
                                  styleClass="close icon icon-close icon-replace"
                                  onclick="#{rich:component('shakedownTestDetailPopup')}.hide(); return false;">
                        x
                    </h:outputLink>
                </f:facet>
                <h:panelGroup id="shakedownTestDetailPopupPanelGroup">
                    <h:panelGroup>
                        <h:outputText
                                value="Last successful deployment of application server: ${shakedownTestScreenDataProvider.lastSuccessfulDeploymentDate}"/>
                        <br/>
                        <h:outputText
                                value="Effectively used release: ${shakedownTestScreenDataProvider.selectedShakedownTest.applicationServer.release.name}"/>
                        <br/>
                        <h:outputText
                                value="created at: ${shakedownTestScreenDataProvider.formatDate(shakedownTestScreenDataProvider.selectedShakedownTest.testDate)}"/>
                        <br/>
                    </h:panelGroup>
                    <br/>
                    <h:panelGroup styleClass="well" layout="block">
                        <h2>
                            <h:outputText value="Result details"/>
                        </h2>
                        <hr/>
                        <h:outputText styleClass="width700px maxHeight500px autoOverflow"
                                      value="${shakedownTestScreenDataProvider.selectedShakedownTest.testResult}"
                                      escape="false"/>
                    </h:panelGroup>
                </h:panelGroup>
            </rich:popupPanel>
        </h:form>

        <h:form prependId="false">
            <rich:popupPanel id="createTestPopupPanel" moveable="true"
                             autosized="true" domElementAttachment="form">
                <f:facet name="header">
                    <h2>
                        <h:outputText value="Create shakedown test order"
                                      id="createTestPopupPanelFacet"/>
                    </h2>
                </f:facet>
                <f:facet name="controls">
                    <h:outputLink value="#"
                                  styleClass="close icon icon-close icon-replace"
                                  onclick="#{rich:component('createTestPopupPanel')}.hide(); return false;">
                        x
                    </h:outputLink>
                </f:facet>

                <h:panelGroup id="createTestPopupPanelGroup">

                    <h:dataTable var="sdtestOrder"
                                 value="#{shakedownTestScreenDataProvider.shakedownTestOrder}"
                                 rowClasses="odd-row,even-row"
                                 class="well width_1100"
                                 rendered="#{shakedownTestScreenDataProvider.renderCreateOrderDialog}">

                        <f:facet name="caption">
                            <nav class="actionbar">
                                <ul>
                                    <li><h:selectOneMenu styleClass="autoWidth"
                                                         value="#{shakedownTestScreenDataProvider.selectedOrderEnvironmentId}">
                                        <f:selectItem itemLabel="Select environment"
                                                      itemValue="${null}"/>
                                        <f:selectItems value="${contextDataProvider.environments}"
                                                       var="env" itemLabel="${env.name}" itemValue="${env.id}"/>
                                        <a4j:ajax render="asSelection releaseSelection"
                                                  onbegin="showLoader();" oncomplete="hideLoader();"
                                                  onerror="hideLoader();"/>
                                    </h:selectOneMenu></li>

                                    <li>
                                        <h:outputLabel styleClass="control-label autoWidth" value="Only deployed">
                                            <h:selectBooleanCheckbox
                                                    value="#{shakedownTestScreenDataProvider.showOnlyDeployedAppServers}"
                                                    title="Show only deployed application server">
                                                <f:ajax render="asSelection releaseSelection"/>
                                            </h:selectBooleanCheckbox>
                                        </h:outputLabel>

                                        <h:selectOneMenu id="asSelection" styleClass="width_240px"
                                                         value="#{shakedownTestScreenDataProvider.selectedOrderAppServerGroupId}">
                                            <f:selectItem
                                                    itemLabel="Select ${shakedownTestScreenDataProvider.showOnlyDeployedAppServers ? 'deployed' : 'any'} application server"
                                                    itemValue="${null}"/>
                                            <f:selectItem
                                                    itemLabel="${shakedownTestScreenDataProvider.allAppserverSelectedText}"
                                                    itemValue="-1"/>
                                            <f:selectItems
                                                    value="${shakedownTestScreenDataProvider.appServerGroups}"
                                                    var="asGroup" itemLabel="${asGroup.name}"
                                                    itemValue="${asGroup.id}"/>
                                            <a4j:ajax render="releaseSelection"
                                                      onbegin="showLoader();" oncomplete="hideLoader();"
                                                      onerror="hideLoader();"/>
                                        </h:selectOneMenu></li>

                                    <li><h:selectOneMenu id="releaseSelection" styleClass="switchRelease"
                                                         disabled="#{shakedownTestScreenDataProvider.releasesForAs == null or shakedownTestScreenDataProvider.selectedOrderAppServerGroupId == null}"
                                                         value="#{shakedownTestScreenDataProvider.selectedReleaseId}">
                                        <f:selectItems
                                                value="${shakedownTestScreenDataProvider.releasesForAs}"
                                                var="release" itemLabel="${release.name}" itemValue="${release.id}"/>
                                    </h:selectOneMenu></li>

                                    <li><a4j:commandLink styleClass="btn light"
                                                         render="createTestPopupPanelGroup"
                                                         action="${shakedownTestScreenDataProvider.addShakedownTestOrder()}">
                                        <i class="icon icon-add"></i>
                                        <h:outputText value="Add to order"/>
                                    </a4j:commandLink></li>
                                </ul>
                            </nav>

                        </f:facet>

                        <h:column index="index" headerClass="width_500">
                            <f:facet name="header">
                                <h:outputText styleClass="nowrap" value="Application server"/>
                            </f:facet>
                            <h:outputText value="#{sdtestOrder.applicationServerName}"/>
                        </h:column>

                        <h:column index="index" headerClass="width_500">
                            <f:facet name="header">
                                <h:outputText value="Release"/>
                            </f:facet>
                            <h:outputText value="#{sdtestOrder.releaseName}"/>
                        </h:column>

                        <h:column index="index" headerClass="width_240px">
                            <f:facet name="header">
                                <h:outputText value="Environment"/>
                            </f:facet>
                            <h:outputText value="#{sdtestOrder.environmentName}"/>
                        </h:column>

                        <h:column index="index">
                            <f:facet name="header">
                                <h:outputText styleClass="nowrap" value="test neighbourhood"/>
                            </f:facet>
                            <h:selectBooleanCheckbox
                                    value="#{sdtestOrder.createTestForNeighbourhood}">
                            </h:selectBooleanCheckbox>
                        </h:column>

                        <h:column index="index">
                            <f:facet name="header">
                                <h:outputText value="Action"/>
                            </f:facet>
                            <a4j:commandLink
                                    action="${shakedownTestScreenDataProvider.removeSelectedShakedownTestFromOrder(sdtestOrder)}"
                                    render="createTestPopupPanelGroup" value="remove">
                            </a4j:commandLink>
                        </h:column>
                    </h:dataTable>

                    <a4j:commandLink styleClass="btn primary right marginLeft20"
                                     rendered="#{securityDataProvider.hasPermission('EXECUTE_SHAKE_TEST_ORDER')}"
                                     value="Execute shakedown test order" type="button"
                                     action="${shakedownTestScreenDataProvider.createShakedownTest()}"
                                     onclick="showLoader();"
                                     oncomplete="hideLoader();#{rich:component('createTestPopupPanel')}.hide(); return false;"
                                     render="shakedowntest, selectedFilter"/>

                </h:panelGroup>
            </rich:popupPanel>


        </h:form>

    </ui:define>
</ui:composition>
</html>